{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "<?php\n/* ***********************************************************************\n * This file is part of 4373Alpha-Server Project.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n * ***********************************************************************\n */\n\nnamespace Anneck\\Game;\n\n/**\n * A (Game)Configuration is used as a READ ONLY container carrying a key/value collection.\n *\n * The implementations of this class MUST NOT allow access to its internal data.\n *\n *\n */\ninterface Configuration\n{\n    /**\n     * Returns all configuration key's.\n     *\n     * @return array of configuration key's;\n     */\n    public function getConfigurationKeys();\n\n    /**\n     * Returns the configuration as a collection.\n     *\n     * @return mixed\n     */\n    public function getConfiguration();\n\n    public function hasConfigurationKey($key);\n\n}",
			"file": "src/Anneck/Game/Configuration.php",
			"file_size": 917,
			"file_write_time": 130685421859772015,
			"settings":
			{
				"buffer_size": 917,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<?php\n/*************************************************************************\n * This file is part of 4373Alpha-Server Project.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n * ***********************************************************************\n */\nnamespace Anneck\\Game\\Product;\n\nuse Anneck\\Game\\License,\n    Anneck\\Game\\Product,\n    Anneck\\Game\\Resource;\n\nuse Anneck\\Game\\ProductFactory;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\n\n/**\n * Class DefaultProduct\n * @package Anneck\\Game\\Product\n */\nclass DefaultProduct implements Product {\n\n\n    /**\n     * @var ArrayCollection\n     */\n    private $resources;\n    private $licence;\n\n    public function __construct()\n    {\n        $this->resources = new ArrayCollection();\n        \n    }\n\n    /**\n     * @return ArrayCollection\n     */\n    public function getResources()\n    {\n        return $this->resources;\n    }\n\n    /**\n     * @return mixed\n     */\n    public function getLicence()\n    {\n        return $this->licence;\n    }\n\n    /**\n     * @todo: what should we return, I vote for true|false ...\n     * @param Resource $resource\n     * @return mixed|void\n     */\n    public function addResource(Resource $resource)\n    {\n        // Lets check first ...\n        $isCompatible =\n            $this->checkIfCompatibleWithContained($resource);\n\n        if($isCompatible) {\n            $this->resources->add($resource);\n        } // no else required, we do nothing if its not compatible\n    }\n\n    /**\n     * Calls isCompatible with each resource already contained in this product.\n     * If any already contained resource is not compatible FALSE is returned.\n     *\n     * @param Resource $resource the resource to check for compatibility with all contained resources.\n     * @return bool TRUE if the Resource specified in the param is compatible with all contained resources.\n     */\n    private function checkIfCompatibleWithContained(Resource $resource)\n    {\n        // start with a default which makes the loop short\n        $isCompatible = true;\n        // get the iterator from my contained resources\n        $containedResource = $this->resources->getIterator();\n        // do the shuffle ...\n        foreach ($containedResource as $withExistingResource) {\n            if (!$resource->isCompatible($withExistingResource)) {\n                // if any one resource IS NOT compatible - switch to FALSE\n                $isCompatible = false;\n            } // if every contained resource IS compatible - leave default TRUE untouched\n        }\n\n        // ... end of calculation\n        return $isCompatible;\n    }\n\n    /**\n     * @param License $license\n     */\n    public function addLicence(License $license)\n    {\n        // TODO: Implement addLicence() method.\n    }\n\n    /**\n     * @param ProductFactory $productFactory\n     * @return Product\n     */\n    public function build(ProductFactory $productFactory)\n    {\n        return $this;\n    }\n\n    /**\n     * @return boolean\n     */\n    public function validate()\n    {\n        return true;\n    }\n}",
			"file": "src/Anneck/Game/Product/DefaultProduct.php",
			"file_size": 3094,
			"file_write_time": 130685438193491447,
			"settings":
			{
				"buffer_size": 3103,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/andre/Repos/GitHub/4373Alpha-Server",
		"/home/andre/Repos/GitHub/4373Alpha-Server/src",
		"/home/andre/Repos/GitHub/4373Alpha-Server/src/Anneck",
		"/home/andre/Repos/GitHub/4373Alpha-Server/src/Anneck/Game",
		"/home/andre/Repos/GitHub/4373Alpha-Server/src/Anneck/Game/Product"
	],
	"file_history":
	[
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/Anneck/Game/Configuration.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 917,
						"regions":
						{
						},
						"selection":
						[
							[
								818,
								818
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/Anneck/Game/Product/DefaultProduct.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3103,
						"regions":
						{
						},
						"selection":
						[
							[
								1964,
								1964
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1017.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "4373Alpha-Server.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 249.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
